{"ast":null,"code":"var _jsxFileName = \"E:\\\\Web\\\\Projects\\\\FrontEnd\\\\Typing_Test_React\\\\src\\\\components\\\\ParaGraphCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport para from '../assets/ParaGraph';\nimport Letter from './Letter';\nimport RestartButton from './RestartButton';\nimport EndCard from './EndCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ParaGraphCard() {\n  _s();\n  let index = 0;\n  const [openInput, setClose] = useState(true);\n  const [totalTime, setTotalTime] = useState(0);\n  const [finalPara, setFinalPara] = useState(\"\");\n  const [len, setLen] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const [userInput, setUserInput] = useState(\"\");\n  const [isActive, setIsActive] = useState(false);\n  const [isCompleted, setIsCompleted] = useState(false);\n  const [paraGraph, setParaGraph] = useState(para.split('').map(char => {\n    return {\n      key: index++,\n      val: char,\n      color: \"dark\"\n    };\n  }));\n  const userInputHandler = e => {\n    const newParaGraph = paraGraph;\n    const inputUser = e.target.value;\n    const idx = inputUser.length - 1;\n    setLen(inputUser.length);\n    setUserInput(e.target.value);\n    if (idx > para.length - 1) {\n      return;\n    }\n    if (idx < para.length - 1) {\n      newParaGraph[idx + 1].color = \"info\";\n    }\n    if (len > inputUser.length) {\n      if (len < para.length) {\n        newParaGraph[len].color = \"dark\";\n      }\n    }\n    if (inputUser.length === 0) {\n      return;\n    }\n    if (newParaGraph[idx].val === inputUser[idx]) {\n      newParaGraph[idx].color = \"success\";\n    } else {\n      newParaGraph[idx].color = \"danger\";\n    }\n    if (len === 0) {\n      setIsActive(true);\n    }\n    if (inputUser.length === para.length) {\n      setClose(false);\n      setTotalTime(seconds);\n      setFinalPara(e.target.value);\n      setIsCompleted(true);\n      setIsActive(false);\n    }\n    setParaGraph(newParaGraph);\n  };\n  useEffect(() => {\n    let interval = null;\n    if (isActive) {\n      interval = setInterval(() => {\n        setSeconds(seconds => seconds + 1);\n      }, 1000);\n    } else if (!isActive && seconds !== 0) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isActive, seconds]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex row justify-content-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"m-5 fs-4 w-75\",\n      children: /*#__PURE__*/_jsxDEV(\"b-card\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-wrap bg-dark text-light\",\n          children: paraGraph.map(v => /*#__PURE__*/_jsxDEV(Letter, {\n            letter: v.val,\n            color: v.color\n          }, v.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), openInput && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"align-self-center\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"w-100 fs-5\",\n          placeholder: \"type here\",\n          value: userInput,\n          onChange: userInputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this), isCompleted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"m-5 fs-4 w-75\",\n      children: /*#__PURE__*/_jsxDEV(EndCard, {\n        finalPara: finalPara,\n        mainPara: para,\n        time: totalTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"m-5 fs-4 w-75 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Time : \", seconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RestartButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n_s(ParaGraphCard, \"JpiT9uiDk4qcdQMk9YSIX6tcu7w=\");\n_c = ParaGraphCard;\nvar _c;\n$RefreshReg$(_c, \"ParaGraphCard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","para","Letter","RestartButton","EndCard","jsxDEV","_jsxDEV","ParaGraphCard","_s","index","openInput","setClose","totalTime","setTotalTime","finalPara","setFinalPara","len","setLen","seconds","setSeconds","userInput","setUserInput","isActive","setIsActive","isCompleted","setIsCompleted","paraGraph","setParaGraph","split","map","char","key","val","color","userInputHandler","e","newParaGraph","inputUser","target","value","idx","length","interval","setInterval","clearInterval","className","children","v","letter","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","mainPara","time","_c","$RefreshReg$"],"sources":["E:/Web/Projects/FrontEnd/Typing_Test_React/src/components/ParaGraphCard.jsx"],"sourcesContent":["import React, { useState , useEffect , useRef } from 'react'\r\nimport para from '../assets/ParaGraph';\r\nimport Letter from './Letter';\r\nimport RestartButton from './RestartButton';\r\nimport EndCard from './EndCard';\r\n\r\nexport default function ParaGraphCard() {\r\n    let index = 0\r\n\r\n    const [openInput,setClose] = useState(true);\r\n    const [totalTime,setTotalTime] = useState(0)\r\n    const [finalPara,setFinalPara] = useState(\"\");\r\n    const [len,setLen] = useState(0);\r\n    const [seconds, setSeconds] = useState(0);\r\n    const [userInput,setUserInput] = useState(\"\");\r\n    const [isActive,setIsActive] = useState(false);\r\n    const [isCompleted,setIsCompleted] = useState(false);\r\n\r\n    const [paraGraph,setParaGraph] = useState(para.split('').map((char) => {\r\n        return ({\r\n            key: index++,\r\n            val: char,\r\n            color: \"dark\"\r\n        })\r\n    }))\r\n    \r\n    const userInputHandler = (e) => {\r\n        const newParaGraph = paraGraph\r\n        const inputUser = e.target.value\r\n        const idx = inputUser.length-1\r\n        setLen(inputUser.length)\r\n        setUserInput(e.target.value)\r\n        if(idx > para.length - 1) {\r\n            return;\r\n        }\r\n        if(idx < para.length - 1) {\r\n            newParaGraph[idx+1].color= \"info\"\r\n        }\r\n        if(len > inputUser.length) {\r\n            if(len < para.length) {\r\n                newParaGraph[len].color= \"dark\"\r\n            }\r\n        }\r\n        if(inputUser.length === 0) {\r\n            return\r\n        }\r\n        if(newParaGraph[idx].val === inputUser[idx]) {\r\n            newParaGraph[idx].color= \"success\"\r\n        }\r\n        else {\r\n            newParaGraph[idx].color= \"danger\"\r\n        }\r\n        if(len === 0) {\r\n            setIsActive(true)\r\n        }\r\n        if(inputUser.length === para.length) {\r\n            setClose(false)\r\n            setTotalTime(seconds)\r\n            setFinalPara(e.target.value)\r\n            setIsCompleted(true)\r\n            setIsActive(false)\r\n        }\r\n        setParaGraph(newParaGraph)\r\n    }\r\n\r\n    useEffect(() => {\r\n        let interval = null;\r\n        if (isActive) {\r\n            interval = setInterval(() => {\r\n                setSeconds(seconds => seconds + 1);\r\n            }, 1000);\r\n        } \r\n        else if (!isActive && seconds !== 0) {\r\n            clearInterval(interval);\r\n        }\r\n        return () => clearInterval(interval);\r\n    }, [isActive, seconds]);\r\n    \r\n    return (\r\n        <div className='d-flex row justify-content-center'>\r\n            <div className='m-5 fs-4 w-75'>\r\n                <b-card className='text-center'>\r\n                    <div className='d-flex flex-wrap bg-dark text-light'>\r\n                        {\r\n                            paraGraph.map((v) => (\r\n                                <Letter key={v.key} letter={v.val} color={v.color}/>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </b-card>\r\n            </div>\r\n            {openInput && (\r\n                <div className=\"container d-flex justify-content-center\">\r\n                    <div className=\"align-self-center\">\r\n                        <input className='w-100 fs-5' placeholder=\"type here\" value={userInput} onChange={userInputHandler}/>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {isCompleted ? (\r\n            <div className='m-5 fs-4 w-75'>\r\n                <EndCard finalPara={finalPara} mainPara={para} time={totalTime} />\r\n            </div>\r\n            ) : (\r\n            <div className='m-5 fs-4 w-75 text-center'>\r\n                <div>\r\n                    Time : {seconds}\r\n                </div>\r\n                <RestartButton />\r\n            </div>)}\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAGC,SAAS,EAAGC,MAAM,QAAQ,OAAO;AAC5D,OAAOC,IAAI,MAAM,qBAAqB;AACtC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACpC,IAAIC,KAAK,GAAG,CAAC;EAEb,MAAM,CAACC,SAAS,EAACC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC3C,MAAM,CAACc,SAAS,EAACC,YAAY,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACgB,SAAS,EAACC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM,CAACkB,GAAG,EAACC,MAAM,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EAChC,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACsB,SAAS,EAACC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM,CAACwB,QAAQ,EAACC,WAAW,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAC9C,MAAM,CAAC0B,WAAW,EAACC,cAAc,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAEpD,MAAM,CAAC4B,SAAS,EAACC,YAAY,CAAC,GAAG7B,QAAQ,CAACG,IAAI,CAAC2B,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAEC,IAAI,IAAK;IACnE,OAAQ;MACJC,GAAG,EAAEtB,KAAK,EAAE;MACZuB,GAAG,EAAEF,IAAI;MACTG,KAAK,EAAE;IACX,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC5B,MAAMC,YAAY,GAAGV,SAAS;IAC9B,MAAMW,SAAS,GAAGF,CAAC,CAACG,MAAM,CAACC,KAAK;IAChC,MAAMC,GAAG,GAAGH,SAAS,CAACI,MAAM,GAAC,CAAC;IAC9BxB,MAAM,CAACoB,SAAS,CAACI,MAAM,CAAC;IACxBpB,YAAY,CAACc,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;IAC5B,IAAGC,GAAG,GAAGvC,IAAI,CAACwC,MAAM,GAAG,CAAC,EAAE;MACtB;IACJ;IACA,IAAGD,GAAG,GAAGvC,IAAI,CAACwC,MAAM,GAAG,CAAC,EAAE;MACtBL,YAAY,CAACI,GAAG,GAAC,CAAC,CAAC,CAACP,KAAK,GAAE,MAAM;IACrC;IACA,IAAGjB,GAAG,GAAGqB,SAAS,CAACI,MAAM,EAAE;MACvB,IAAGzB,GAAG,GAAGf,IAAI,CAACwC,MAAM,EAAE;QAClBL,YAAY,CAACpB,GAAG,CAAC,CAACiB,KAAK,GAAE,MAAM;MACnC;IACJ;IACA,IAAGI,SAAS,CAACI,MAAM,KAAK,CAAC,EAAE;MACvB;IACJ;IACA,IAAGL,YAAY,CAACI,GAAG,CAAC,CAACR,GAAG,KAAKK,SAAS,CAACG,GAAG,CAAC,EAAE;MACzCJ,YAAY,CAACI,GAAG,CAAC,CAACP,KAAK,GAAE,SAAS;IACtC,CAAC,MACI;MACDG,YAAY,CAACI,GAAG,CAAC,CAACP,KAAK,GAAE,QAAQ;IACrC;IACA,IAAGjB,GAAG,KAAK,CAAC,EAAE;MACVO,WAAW,CAAC,IAAI,CAAC;IACrB;IACA,IAAGc,SAAS,CAACI,MAAM,KAAKxC,IAAI,CAACwC,MAAM,EAAE;MACjC9B,QAAQ,CAAC,KAAK,CAAC;MACfE,YAAY,CAACK,OAAO,CAAC;MACrBH,YAAY,CAACoB,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;MAC5Bd,cAAc,CAAC,IAAI,CAAC;MACpBF,WAAW,CAAC,KAAK,CAAC;IACtB;IACAI,YAAY,CAACS,YAAY,CAAC;EAC9B,CAAC;EAEDrC,SAAS,CAAC,MAAM;IACZ,IAAI2C,QAAQ,GAAG,IAAI;IACnB,IAAIpB,QAAQ,EAAE;MACVoB,QAAQ,GAAGC,WAAW,CAAC,MAAM;QACzBxB,UAAU,CAACD,OAAO,IAAIA,OAAO,GAAG,CAAC,CAAC;MACtC,CAAC,EAAE,IAAI,CAAC;IACZ,CAAC,MACI,IAAI,CAACI,QAAQ,IAAIJ,OAAO,KAAK,CAAC,EAAE;MACjC0B,aAAa,CAACF,QAAQ,CAAC;IAC3B;IACA,OAAO,MAAME,aAAa,CAACF,QAAQ,CAAC;EACxC,CAAC,EAAE,CAACpB,QAAQ,EAAEJ,OAAO,CAAC,CAAC;EAEvB,oBACIZ,OAAA;IAAKuC,SAAS,EAAC,mCAAmC;IAAAC,QAAA,gBAC9CxC,OAAA;MAAKuC,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC1BxC,OAAA;QAAQuC,SAAS,EAAC,aAAa;QAAAC,QAAA,eAC3BxC,OAAA;UAAKuC,SAAS,EAAC,qCAAqC;UAAAC,QAAA,EAE5CpB,SAAS,CAACG,GAAG,CAAEkB,CAAC,iBACZzC,OAAA,CAACJ,MAAM;YAAa8C,MAAM,EAAED,CAAC,CAACf,GAAI;YAACC,KAAK,EAAEc,CAAC,CAACd;UAAM,GAArCc,CAAC,CAAChB,GAAG;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACrB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAEJ;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACP,EACL1C,SAAS,iBACNJ,OAAA;MAAKuC,SAAS,EAAC,yCAAyC;MAAAC,QAAA,eACpDxC,OAAA;QAAKuC,SAAS,EAAC,mBAAmB;QAAAC,QAAA,eAC9BxC,OAAA;UAAOuC,SAAS,EAAC,YAAY;UAACQ,WAAW,EAAC,WAAW;UAACd,KAAK,EAAEnB,SAAU;UAACkC,QAAQ,EAAEpB;QAAiB;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACnG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEb,EACA5B,WAAW,gBACZlB,OAAA;MAAKuC,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC1BxC,OAAA,CAACF,OAAO;QAACU,SAAS,EAAEA,SAAU;QAACyC,QAAQ,EAAEtD,IAAK;QAACuD,IAAI,EAAE5C;MAAU;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAChE,gBAEN9C,OAAA;MAAKuC,SAAS,EAAC,2BAA2B;MAAAC,QAAA,gBACtCxC,OAAA;QAAAwC,QAAA,GAAK,SACM,EAAC5B,OAAO;MAAA;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACb,eACN9C,OAAA,CAACH,aAAa;QAAA8C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACd;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEd;AAAC5C,EAAA,CAzGuBD,aAAa;AAAAkD,EAAA,GAAblD,aAAa;AAAA,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}