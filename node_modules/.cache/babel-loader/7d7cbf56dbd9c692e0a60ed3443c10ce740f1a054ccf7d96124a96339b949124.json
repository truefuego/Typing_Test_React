{"ast":null,"code":"var _jsxFileName = \"D:\\\\AndroidApps\\\\GitTest\\\\Typing_Test_React\\\\src\\\\components\\\\EndCard.jsx\";\nimport React from 'react';\nimport RestartButton from './RestartButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EndCard(props) {\n  const time = props.time;\n  const mainPara = props.mainPara;\n  const userPara = props.finalPara;\n  const countMistakes = () => {\n    let mistakes = 0;\n    let mainWord = \"\";\n    let userWord = \"\";\n    for (let i = 0; i < mainPara.length - 1; i++) {\n      if (mainPara[i] === ' ') {\n        if (mainWord !== userWord) {\n          mistakes++;\n        }\n        mainWord = \"\";\n        userWord = \"\";\n      } else {\n        mainWord += mainPara[i];\n        userWord += userPara[i];\n      }\n    }\n    if (mainWord !== userWord) {\n      mistakes++;\n    }\n    return mistakes;\n  };\n  const countWords = () => {\n    let c = 1;\n    for (let i = 0; i < mainPara.length; i++) {\n      if (mainPara[i] === ' ') {\n        c++;\n      }\n    }\n    return c;\n  };\n  let words = countWords();\n  let mistakes = countMistakes();\n  let wpm = ((words - mistakes) / time * 60).toFixed(2);\n  let accuracy = ((words - mistakes) * 100 / words).toFixed(2);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex row justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card text-center text-dark bg-white mt-3\",\n      style: {\n        \"width\": \"18rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: \"Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-text\",\n          children: [\"Total Words : \", words, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-text\",\n          children: [\"Mistakes : \", mistakes, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-text\",\n          children: [\"WPM : \", wpm, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-text\",\n          children: [\"Accuracy : \", accuracy, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(RestartButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_c = EndCard;\nvar _c;\n$RefreshReg$(_c, \"EndCard\");","map":{"version":3,"names":["React","RestartButton","jsxDEV","_jsxDEV","EndCard","props","time","mainPara","userPara","finalPara","countMistakes","mistakes","mainWord","userWord","i","length","countWords","c","words","wpm","toFixed","accuracy","className","children","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/AndroidApps/GitTest/Typing_Test_React/src/components/EndCard.jsx"],"sourcesContent":["import React from 'react'\r\nimport RestartButton from './RestartButton'\r\n\r\nexport default function EndCard(props) {\r\n    const time = props.time\r\n    const mainPara = props.mainPara\r\n    const userPara = props.finalPara\r\n\r\n    const countMistakes = () => {\r\n        let mistakes = 0;\r\n        let mainWord = \"\";\r\n        let userWord = \"\";\r\n        for(let i = 0 ; i < mainPara.length - 1 ; i++) {\r\n            if(mainPara[i] === ' ') {\r\n                if(mainWord !== userWord) {\r\n                    mistakes++;\r\n                }\r\n                mainWord = \"\";\r\n                userWord = \"\";\r\n            }\r\n            else {\r\n                mainWord += mainPara[i];\r\n                userWord += userPara[i];\r\n            }\r\n        }\r\n        if(mainWord !== userWord) {\r\n            mistakes++;\r\n        }\r\n        return mistakes;\r\n    }\r\n\r\n    const countWords = () => {\r\n        let c = 1;\r\n        for(let i = 0 ; i < mainPara.length ; i++) {\r\n            if(mainPara[i] === ' ') {\r\n                c++;\r\n            }\r\n        }\r\n        return c;\r\n    }\r\n\r\n    let words = countWords()\r\n    let mistakes = countMistakes()\r\n    let wpm = (((words-mistakes) / time) * 60).toFixed(2)\r\n    let accuracy = ((words - mistakes) * 100 / words).toFixed(2)\r\n\r\n    return (\r\n    <div className='d-flex row justify-content-center'>\r\n        <div className=\"card text-center text-dark bg-white mt-3\" style={{\"width\": \"18rem\"}}>\r\n            <div className=\"card-header\">Results</div>\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-text\">Total Words : {words} </h5>\r\n                <h5 className=\"card-text\">Mistakes : {mistakes} </h5>\r\n                <h5 className=\"card-text\">WPM : {wpm} </h5>\r\n                <h5 className=\"card-text\">Accuracy : {accuracy}%</h5>\r\n                <RestartButton />    \r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}